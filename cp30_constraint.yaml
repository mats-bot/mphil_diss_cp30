global_expressions:
  total_non_fossil_supply:
    description: Sum of all supplied electricity
    foreach: [techs]
    where: base_tech=supply AND NOT category=fossil AND NOT category=import
    equations:
      - expression: sum(flow_out, over=[nodes, carriers, timesteps])
  total_fossil_supply:
    description: Sum of all supplied electricity from co2-emitting technologies
    foreach: [techs]
    where: base_tech=supply AND category=fossil
    equations:
      - expression: sum(flow_out, over=[nodes, carriers, timesteps])
  domestic_demand:
    foreach: [techs]
    where: base_tech=demand AND NOT category=export
    equations:
      - expression: sum(flow_in, over=[nodes, carriers, timesteps])
  total_ldes_capacity:
    description: Sum of all installed ldes
    foreach: [techs]
    where: category=ldes and ldes_max_cap
    equations:
      - expression: sum(flow_cap, over=[nodes, carriers])

constraints:
  fossil_fuel_share_limit:
    description: Limit total fossil fuel generation to less than 5% of total generation.
    foreach: []
    equations:
      - expression: sum(total_fossil_supply, over=techs) <= 0.05 * (sum(total_non_fossil_supply, over=techs) + sum(total_fossil_supply, over=techs))
  non_fossil_meets_national_demand:
    description: Ensure non-fossil generation >= domestic demand (excluding exports).
    foreach: []
    equations:
      - expression: sum(total_non_fossil_supply, over=techs) >= sum(domestic_demand, over=techs)

  LDES_max_capacity:
    description: Uses the LDES max capacity from CP30 outputs
    where: total_ldes_capacity
    equations:
      - expression: sum(total_ldes_capacity, over=techs) <= ldes_max_cap

  annual_capacity_factor_max:
    description: Limits annual generation of a tech to a percentage of capacity.
    foreach: [nodes, techs, carriers]
    where: capacity_factor_max
    equations:
      - expression: sum(flow_out, over=timesteps) <= sum(flow_cap * capacity_factor_max, over=timesteps)